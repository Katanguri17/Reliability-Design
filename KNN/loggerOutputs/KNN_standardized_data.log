[28-12-19 15:27:14 INFO] --------------------------------------
[28-12-19 15:27:14 INFO] Running for standardized data and weight=distance and metric=manhattan
[28-12-19 15:27:14 INFO] Running malware_data_transform...
[28-12-19 15:27:14 INFO] -Reading csv file
[28-12-19 15:27:16 INFO] --Data standardization processing...
[28-12-19 15:27:16 INFO] Function malware_data_transform finished in 1.3589329719543457s
[28-12-19 15:27:16 INFO] Running knn_classifier...
[28-12-19 15:27:16 INFO] -Running KNN algorithm with n_neighbors=1
[28-12-19 15:27:16 INFO] --Finding best 3 features
[28-12-19 15:27:16 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:27:18 INFO] ----Measuring confusion matrix...
[28-12-19 15:27:19 INFO] -----KNN accuracy is: 96.460219727152%
[28-12-19 15:27:19 INFO] -----Precision in percent: 97.58652881988866%
[28-12-19 15:27:19 INFO] -----Recall in percent: 97.35090200407022%
[28-12-19 15:27:19 INFO] -----False positives in percent: 2.4134711801113378%
[28-12-19 15:27:19 INFO] -----False negatives in percent: 6.146950536257403%
[28-12-19 15:27:19 INFO] --Finding best 23 features
[28-12-19 15:27:19 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:28:06 INFO] ----Measuring confusion matrix...
[28-12-19 15:28:30 INFO] -----KNN accuracy is: 99.22733309187493%
[28-12-19 15:28:30 INFO] -----Precision in percent: 99.32749344737205%
[28-12-19 15:28:30 INFO] -----Recall in percent: 99.56786282237434%
[28-12-19 15:28:30 INFO] -----False positives in percent: 0.6725065526279487%
[28-12-19 15:28:30 INFO] -----False negatives in percent: 1.0065222642724856%
[28-12-19 15:28:30 INFO] -Running KNN algorithm with n_neighbors=2
[28-12-19 15:28:30 INFO] --Finding best 3 features
[28-12-19 15:28:30 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:28:33 INFO] ----Measuring confusion matrix...
[28-12-19 15:28:34 INFO] -----KNN accuracy is: 96.41434262948208%
[28-12-19 15:28:34 INFO] -----Precision in percent: 97.5723300803476%
[28-12-19 15:28:34 INFO] -----Recall in percent: 97.31393589214473%
[28-12-19 15:28:34 INFO] -----False positives in percent: 2.4276699196524016%
[28-12-19 15:28:34 INFO] -----False negatives in percent: 6.2902706185567006%
[28-12-19 15:28:34 INFO] --Finding best 23 features
[28-12-19 15:28:34 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:29:16 INFO] ----Measuring confusion matrix...
[28-12-19 15:29:42 INFO] -----KNN accuracy is: 99.24423518049016%
[28-12-19 15:29:42 INFO] -----Precision in percent: 99.3789672328015%
[28-12-19 15:29:42 INFO] -----Recall in percent: 99.54632939235634%
[28-12-19 15:29:42 INFO] -----False positives in percent: 0.6210327671984903%
[28-12-19 15:29:42 INFO] -----False negatives in percent: 1.075794621026895%
[28-12-19 15:29:42 INFO] -Running KNN algorithm with n_neighbors=3
[28-12-19 15:29:42 INFO] --Finding best 3 features
[28-12-19 15:29:42 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:29:45 INFO] ----Measuring confusion matrix...
[28-12-19 15:29:46 INFO] -----KNN accuracy is: 96.57611976337076%
[28-12-19 15:29:46 INFO] -----Precision in percent: 97.62436060283565%
[28-12-19 15:29:46 INFO] -----Recall in percent: 97.51054418269726%
[28-12-19 15:29:46 INFO] -----False positives in percent: 2.375639397164338%
[28-12-19 15:29:46 INFO] -----False negatives in percent: 5.909164903141787%
[28-12-19 15:29:46 INFO] --Finding best 23 features
[28-12-19 15:29:46 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:30:37 INFO] ----Measuring confusion matrix...
[28-12-19 15:31:13 INFO] -----KNN accuracy is: 99.19594349873235%
[28-12-19 15:31:13 INFO] -----Precision in percent: 99.22859701081342%
[28-12-19 15:31:13 INFO] -----Recall in percent: 99.62313729557792%
[28-12-19 15:31:13 INFO] -----False positives in percent: 0.7714029891865831%
[28-12-19 15:31:13 INFO] -----False negatives in percent: 0.8806657509897391%
[28-12-19 15:31:13 INFO] -Running KNN algorithm with n_neighbors=4
[28-12-19 15:31:13 INFO] --Finding best 3 features
[28-12-19 15:31:13 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:31:15 INFO] ----Measuring confusion matrix...
[28-12-19 15:31:16 INFO] -----KNN accuracy is: 96.55197392249185%
[28-12-19 15:31:16 INFO] -----Precision in percent: 97.55587549705197%
[28-12-19 15:31:16 INFO] -----Recall in percent: 97.54918763282375%
[28-12-19 15:31:16 INFO] -----False positives in percent: 2.4441245029480325%
[28-12-19 15:31:16 INFO] -----False negatives in percent: 5.840071877807727%
[28-12-19 15:31:16 INFO] --Finding best 23 features
[28-12-19 15:31:16 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:32:03 INFO] ----Measuring confusion matrix...
[28-12-19 15:32:35 INFO] -----KNN accuracy is: 99.29252686224798%
[28-12-19 15:32:35 INFO] -----Precision in percent: 99.34921837339026%
[28-12-19 15:32:35 INFO] -----Recall in percent: 99.64084677280105%
[28-12-19 15:32:35 INFO] -----False positives in percent: 0.6507816266097376%
[28-12-19 15:32:35 INFO] -----False negatives in percent: 0.8405398852339772%
[28-12-19 15:32:35 INFO] -Running KNN algorithm with n_neighbors=5
[28-12-19 15:32:35 INFO] --Finding best 3 features
[28-12-19 15:32:35 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:32:38 INFO] ----Measuring confusion matrix...
[28-12-19 15:32:39 INFO] -----KNN accuracy is: 96.6968489677653%
[28-12-19 15:32:39 INFO] -----Precision in percent: 97.64037202893559%
[28-12-19 15:32:39 INFO] -----Recall in percent: 97.64709935234946%
[28-12-19 15:32:39 INFO] -----False positives in percent: 2.359627971064416%
[28-12-19 15:32:39 INFO] -----False negatives in percent: 5.514735567218409%
[28-12-19 15:32:39 INFO] --Finding best 23 features
[28-12-19 15:32:39 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:33:31 INFO] ----Measuring confusion matrix...
[28-12-19 15:34:09 INFO] -----KNN accuracy is: 99.2321622600507%
[28-12-19 15:34:09 INFO] -----Precision in percent: 99.25191311211009%
[28-12-19 15:34:09 INFO] -----Recall in percent: 99.65544568101161%
[28-12-19 15:34:09 INFO] -----False positives in percent: 0.7480868878899145%
[28-12-19 15:34:09 INFO] -----False negatives in percent: 0.8147303242626691%
[28-12-19 15:34:09 INFO] -Running KNN algorithm with n_neighbors=6
[28-12-19 15:34:09 INFO] --Finding best 3 features
[28-12-19 15:34:09 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:34:12 INFO] ----Measuring confusion matrix...
[28-12-19 15:34:14 INFO] -----KNN accuracy is: 96.66545937462271%
[28-12-19 15:34:14 INFO] -----Precision in percent: 97.60559498380762%
[28-12-19 15:34:14 INFO] -----Recall in percent: 97.63586862873488%
[28-12-19 15:34:14 INFO] -----False positives in percent: 2.3944050161923793%
[28-12-19 15:34:14 INFO] -----False negatives in percent: 5.537170070223586%
[28-12-19 15:34:14 INFO] --Finding best 23 features
[28-12-19 15:34:14 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:35:12 INFO] ----Measuring confusion matrix...
[28-12-19 15:35:54 INFO] -----KNN accuracy is: 99.26838102136907%
[28-12-19 15:35:54 INFO] -----Precision in percent: 99.37617823479006%
[28-12-19 15:35:54 INFO] -----Recall in percent: 99.5843923885416%
[28-12-19 15:35:54 INFO] -----False positives in percent: 0.62382176520994%
[28-12-19 15:35:54 INFO] -----False negatives in percent: 0.9885620915032679%
[28-12-19 15:35:54 INFO] -Running KNN algorithm with n_neighbors=7
[28-12-19 15:35:54 INFO] --Finding best 3 features
[28-12-19 15:35:54 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:35:57 INFO] ----Measuring confusion matrix...
[28-12-19 15:35:58 INFO] -----KNN accuracy is: 96.60992394060123%
[28-12-19 15:35:58 INFO] -----Precision in percent: 97.59485797221646%
[28-12-19 15:35:58 INFO] -----Recall in percent: 97.55440414507773%
[28-12-19 15:35:58 INFO] -----False positives in percent: 2.4051420277835374%
[28-12-19 15:35:58 INFO] -----False negatives in percent: 5.6744409713873525%
[28-12-19 15:35:58 INFO] --Finding best 23 features
[28-12-19 15:35:58 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:36:50 INFO] ----Measuring confusion matrix...
[28-12-19 15:37:28 INFO] -----KNN accuracy is: 99.27562477363274%
[28-12-19 15:37:28 INFO] -----Precision in percent: 99.3736880140404%
[28-12-19 15:37:28 INFO] -----Recall in percent: 99.59303328160027%
[28-12-19 15:37:28 INFO] -----False positives in percent: 0.6263119859595995%
[28-12-19 15:37:28 INFO] -----False negatives in percent: 0.9550016186468113%
[28-12-19 15:37:28 INFO] -Running KNN algorithm with n_neighbors=8
[28-12-19 15:37:28 INFO] --Finding best 3 features
[28-12-19 15:37:28 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:37:31 INFO] ----Measuring confusion matrix...
[28-12-19 15:37:32 INFO] -----KNN accuracy is: 96.48919473620668%
[28-12-19 15:37:32 INFO] -----Precision in percent: 97.58181692382205%
[28-12-19 15:37:32 INFO] -----Recall in percent: 97.3931358331607%
[28-12-19 15:37:32 INFO] -----False positives in percent: 2.418183076177956%
[28-12-19 15:37:32 INFO] -----False negatives in percent: 6.035654328883204%
[28-12-19 15:37:32 INFO] --Finding best 23 features
[28-12-19 15:37:32 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:38:43 INFO] ----Measuring confusion matrix...
[28-12-19 15:39:28 INFO] -----KNN accuracy is: 99.33357479174212%
[28-12-19 15:39:28 INFO] -----Precision in percent: 99.38396943937778%
[28-12-19 15:39:28 INFO] -----Recall in percent: 99.66522864538395%
[28-12-19 15:39:28 INFO] -----False positives in percent: 0.6160305606222253%
[28-12-19 15:39:28 INFO] -----False negatives in percent: 0.7849166531801263%
[28-12-19 15:39:28 INFO] -Running KNN algorithm with n_neighbors=9
[28-12-19 15:39:28 INFO] --Finding best 3 features
[28-12-19 15:39:29 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:39:32 INFO] ----Measuring confusion matrix...
[28-12-19 15:39:33 INFO] -----KNN accuracy is: 96.65097187009538%
[28-12-19 15:39:33 INFO] -----Precision in percent: 97.53644015602546%
[28-12-19 15:39:33 INFO] -----Recall in percent: 97.7136393240325%
[28-12-19 15:39:33 INFO] -----False positives in percent: 2.463559843974543%
[28-12-19 15:39:33 INFO] -----False negatives in percent: 5.472147017802937%
[28-12-19 15:39:33 INFO] --Finding best 23 features
[28-12-19 15:39:33 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:40:36 INFO] ----Measuring confusion matrix...
[28-12-19 15:41:23 INFO] -----KNN accuracy is: 99.22008933961125%
[28-12-19 15:41:23 INFO] -----Precision in percent: 99.27729826003562%
[28-12-19 15:41:23 INFO] -----Recall in percent: 99.61508059250095%
[28-12-19 15:41:23 INFO] -----False positives in percent: 0.7227017399643787%
[28-12-19 15:41:23 INFO] -----False negatives in percent: 0.916605286848351%
[28-12-19 15:41:23 INFO] -Running KNN algorithm with n_neighbors=10
[28-12-19 15:41:23 INFO] --Finding best 3 features
[28-12-19 15:41:23 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:41:26 INFO] ----Measuring confusion matrix...
[28-12-19 15:41:27 INFO] -----KNN accuracy is: 96.63648436556804%
[28-12-19 15:41:27 INFO] -----Precision in percent: 97.51469526657729%
[28-12-19 15:41:27 INFO] -----Recall in percent: 97.69267855912942%
[28-12-19 15:41:27 INFO] -----False positives in percent: 2.485304733422708%
[28-12-19 15:41:27 INFO] -----False negatives in percent: 5.436546575787082%
[28-12-19 15:41:27 INFO] --Finding best 23 features
[28-12-19 15:41:27 INFO] ---Starting fitting for weight=distance and metric=manhattan
[28-12-19 15:42:29 INFO] ----Measuring confusion matrix...
[28-12-19 15:43:16 INFO] -----KNN accuracy is: 99.27562477363274%
[28-12-19 15:43:16 INFO] -----Precision in percent: 99.33167975747554%
[28-12-19 15:43:16 INFO] -----Recall in percent: 99.63372494816862%
[28-12-19 15:43:16 INFO] -----False positives in percent: 0.6683202425244591%
[28-12-19 15:43:16 INFO] -----False negatives in percent: 0.8557358521030113%
[28-12-19 15:43:16 INFO] Function knn_classifier finished in 959.8646898269653s
